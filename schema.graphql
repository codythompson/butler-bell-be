scalar DateTime

type Query {
  serverTime: DateTime!
  bells: [Bell!]!
}

type Mutation {
  createBell(name: String!, order: Int):Int
  doteEvent(bellName: String!, type:DoteEventType!, timestamp:DateTime):DoteEvent
}

enum DoteEventType {
  requested,
  inProgress,
  onHold,
  fulfilled
}

type DoteEvent {
  type:  DoteEventType!
  timestamp: DateTime!
}

type DoteRequest {
  events: [DoteEvent!]!
}

type Bell {
  name: String!
  description: String
  doteRequest: DoteRequest
}
